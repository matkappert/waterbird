[
    {
        "id": "20e19740.7ac5c",
        "type": "tab",
        "label": "Waterbird",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7ea42969.fefc28",
        "type": "mqtt out",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "waterbird/set/ch1",
        "qos": "",
        "retain": "",
        "broker": "59504833.dbd63",
        "x": 420,
        "y": 540,
        "wires": []
    },
    {
        "id": "215902c6.1be526",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 540,
        "wires": [
            [
                "7ea42969.fefc28"
            ]
        ]
    },
    {
        "id": "71fd9b5f.2cd274",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 580,
        "wires": [
            [
                "7ea42969.fefc28"
            ]
        ]
    },
    {
        "id": "cbdff93b.fcd898",
        "type": "mqtt out",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "waterbird/set/ch2",
        "qos": "",
        "retain": "",
        "broker": "59504833.dbd63",
        "x": 420,
        "y": 640,
        "wires": []
    },
    {
        "id": "d774fa4e.eaa198",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 640,
        "wires": [
            [
                "cbdff93b.fcd898"
            ]
        ]
    },
    {
        "id": "909f0577.7624d",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 680,
        "wires": [
            [
                "cbdff93b.fcd898"
            ]
        ]
    },
    {
        "id": "3c46a69d.01ff6a",
        "type": "schedex",
        "z": "20e19740.7ac5c",
        "name": "",
        "passthroughunhandled": false,
        "suspended": false,
        "lat": "-33.49",
        "lon": "151.33",
        "ontime": "sunriseEnd",
        "ontopic": "",
        "onpayload": "on",
        "onoffset": "",
        "onrandomoffset": 0,
        "offtime": "sunriseEnd",
        "offtopic": "",
        "offpayload": "off",
        "offoffset": "60",
        "offrandomoffset": false,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 370,
        "y": 100,
        "wires": [
            [
                "8782aeec.566388"
            ]
        ]
    },
    {
        "id": "66a96e95.f82dc8",
        "type": "http request",
        "z": "20e19740.7ac5c",
        "name": "onecall",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://api.openweathermap.org/data/2.5/onecall?units=metric&lat=-33.49&lon=151.33&APPID=",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 800,
        "y": 100,
        "wires": [
            [
                "9d5f30bc.eb7e18",
                "1d0bf7d0.71a988"
            ]
        ]
    },
    {
        "id": "9d5f30bc.eb7e18",
        "type": "debug",
        "z": "20e19740.7ac5c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 950,
        "y": 40,
        "wires": []
    },
    {
        "id": "26d0a049.6152b8",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "Trigger API call",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 580,
        "y": 160,
        "wires": [
            [
                "66a96e95.f82dc8"
            ]
        ]
    },
    {
        "id": "1d0bf7d0.71a988",
        "type": "function",
        "z": "20e19740.7ac5c",
        "name": "onecall api",
        "func": "var daily = [];\nvar update = false;\nvar retries = global.get(\"open_weather_retries\") || 0;\n\nif (msg.statusCode && msg.statusCode === 200 && msg.payload.daily) {\n  global.set(\"open_weather_retries\", 0);\n  if (msg.payload.daily) {\n    msg.payload.daily.forEach((day, i) => {\n      daily[i] = {\n        rain: day.rain || 0,\n        wind: day.wind_speed || 0,\n        max_temp: day.temp.max || 0,\n      };\n    });\n    update = true;\n  }\n\n  node.send([null, { payload: daily }], null);\n\n  if (daily[0].rain >= 10.0) {\n    // Turn off irrigation when it rains over 10 mm.\n    node.send([{ payload: \"off\", weather: daily[0] }, null, null]);\n  } else if (daily[0].rain >= 5.0) {\n    // Decrease irrigation by 50% when it rains over 5 mm\n    node.send([{ payload: \"reduced\", weather: daily[0] }, null, null]);\n  } else if (daily[0].wind_speed >= 50.0) {\n    // Delay irrigation if wind speeds over 50 km/hr are forecast.\n    node.send([{ payload: \"delay\", weather: daily[0] }, null, null]);\n  } else if (daily[0].max_temp >= 35.0) {\n    // Increase irrigation by 20% if forecast temperature is over 35 degrees.\n    node.send([{ payload: \"increase\", weather: daily[0] }, null, null]);\n  } else {\n    node.send([{ payload: \"normal\", weather: daily[0] }, null, null]);\n  }\n\n  if (update || msg.payload.update == \"status\") {\n    node.status({\n      fill: \"blue\",\n      shape: \"ring\",\n      text: `${daily[0].rain}mm, ${daily[0].wind}km/h, ${daily[0].max_temp}℃`,\n    });\n    setTimeout(() => {\n      node.status({\n        fill: \"grey\",\n        shape: \"dot\",\n        text: `${daily[0].rain}mm, ${daily[0].wind}km/h, ${daily[0].max_temp}℃`,\n      });\n    }, 1500);\n  }\n} else {\n  if (retries <= 3) {\n      retries = retries+1;\n     global.set(\"open_weather_retries\", retries)\n    node.warn(`Openweather API ERROR, retry in ${retries}min`);\n    \n    setTimeout(() => {\n      node.send([null, null, { payload: \"retry\" }]);\n    }, 60000 * retries);\n  } else {\n    node.warn(`Openweather API FAILED, triggering outputs`);\n    node.send([{ payload: \"normal\" }, null, null]);\n    global.set(\"open_weather_retries\", 0);\n  }\n}",
        "outputs": 3,
        "noerr": 0,
        "x": 990,
        "y": 100,
        "wires": [
            [
                "d7d3bb3b.064448"
            ],
            [
                "f2067860.8dc34"
            ],
            [
                "66a96e95.f82dc8"
            ]
        ]
    },
    {
        "id": "f2067860.8dc34",
        "type": "debug",
        "z": "20e19740.7ac5c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1170,
        "y": 40,
        "wires": []
    },
    {
        "id": "d1516414.e4007",
        "type": "mqtt out",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "59504833.dbd63",
        "x": 1350,
        "y": 180,
        "wires": []
    },
    {
        "id": "50e2bd3b.442d7c",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "reduced",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 960,
        "y": 320,
        "wires": [
            [
                "d7d3bb3b.064448"
            ]
        ]
    },
    {
        "id": "4b277e0.31f0204",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 950,
        "y": 280,
        "wires": [
            [
                "d7d3bb3b.064448"
            ]
        ]
    },
    {
        "id": "3c68dd06.1ee5ba",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "delay",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 950,
        "y": 360,
        "wires": [
            [
                "d7d3bb3b.064448"
            ]
        ]
    },
    {
        "id": "d362006b.b65c5",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "increase",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 960,
        "y": 400,
        "wires": [
            [
                "d7d3bb3b.064448"
            ]
        ]
    },
    {
        "id": "1cc52486.cf462b",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "",
        "payload": "normal",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 950,
        "y": 240,
        "wires": [
            [
                "d7d3bb3b.064448"
            ]
        ]
    },
    {
        "id": "8782aeec.566388",
        "type": "switch",
        "z": "20e19740.7ac5c",
        "name": "trigger",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 100,
        "wires": [
            [
                "66a96e95.f82dc8"
            ]
        ]
    },
    {
        "id": "b4369886.09adf8",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "Schedule OFF",
        "topic": "",
        "payload": "{\"suspended\":true}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "3c46a69d.01ff6a"
            ]
        ]
    },
    {
        "id": "29980d9c.cbf2da",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "Schedule ON",
        "topic": "",
        "payload": "{\"suspended\":false}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 200,
        "wires": [
            [
                "3c46a69d.01ff6a"
            ]
        ]
    },
    {
        "id": "a4045b9e.bc22c",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "Trigger ON",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 240,
        "wires": [
            [
                "3c46a69d.01ff6a"
            ]
        ]
    },
    {
        "id": "ae06752d.51202",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "Trigger OFF",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 280,
        "wires": [
            [
                "3c46a69d.01ff6a"
            ]
        ]
    },
    {
        "id": "d7d3bb3b.064448",
        "type": "function",
        "z": "20e19740.7ac5c",
        "name": "Timmer",
        "func": "/*********************************************************************\n  //    User Configurations.\n**********************************************************************/\n\n//\n//  this is an array channel times\n//\nvar times = [5];\n\n/*********************************************************************\n  //    End User Configurations.\n**********************************************************************/\n\nlet output = [];\nlet mode;\n\ntimes.forEach((times, i) => {\n  if (msg.payload == \"off\") {\n    // Turn off irrigation when it rains over 10 mm.\n    output[i] = 0;\n    mode = \"Skip: rains over 10 mm\";\n  } else if (msg.payload == \"reduced\") {\n    // Decrease irrigation by 50% when it rains over 5 mm\n    output[i] = times / 2;\n     mode = \"Reduced: rains over 5 mm\";\n  } else if (msg.payload == \"delay\") {\n    // Delay irrigation if wind speeds over 50 km/hr are forecast.\n    output[i] = -1;\n    mode = \"Delayed: wind speeds over 50 km/hr, will try again in an hour\";\n    setTimeout(() => {\n      node.send([null, { payload: \"retry\" }, null]);\n    }, 60000 * 60);\n  } else if (msg.payload == \"increase\") {\n    // Increase irrigation by 20% if forecast temperature is over 35 degrees.\n    output[i] = times + times * 0.2;\n     mode = \"Increased: over 35 degrees\";\n  } else {\n    output[i] = times;\n    mode = \"Normal watering.\";\n  }\n\n  triggerOutput(i, output[i]);\n  node.send([  null, null, { payload: `${mode}\\nToday: ${msg.weather.max_temp}℃, ${msg.weather.rain}mm,  ${msg.weather.wind}km/h` }]);\n});\n\nfunction triggerOutput(channel, period) {\n  if (period > 0) {\n    node.send([\n      { topic: `waterbird/set/ch${channel + 1}`, payload: \"on\" },\n      null, null\n    ]);\n    setTimeout(() => {\n      node.send([\n        { topic: `waterbird/set/ch${channel + 1}`, payload: \"off\" },\n        null, null\n      ]);\n    }, period * 60000);\n  } else {\n    node.send([\n      { topic: `waterbird/set/ch${channel + 1}`, payload: \"off\" },\n      null, null\n    ]);\n  }\n}\n\nlet str = \"\";\nif (output[0] === 0) {\n  str = \"Off\";\n} else if (output[0] === -1) {\n  str = \"Delayed\";\n} else {\n  output.forEach((x, i) => {\n    str = str + `${x}m, `;\n  });\n}\nnode.status({\n  fill: \"blue\",\n  shape: \"ring\",\n  text: str,\n});\nsetTimeout(() => {\n  node.status({\n    fill: \"grey\",\n    shape: \"dot\",\n    text: \"\",\n  });\n}, 10000);\n\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "x": 1160,
        "y": 180,
        "wires": [
            [
                "d1516414.e4007",
                "cd38ba61.7e9ce"
            ],
            [
                "66a96e95.f82dc8"
            ],
            [
                "c589398c.c301e"
            ]
        ]
    },
    {
        "id": "8243749e.681fd",
        "type": "comment",
        "z": "20e19740.7ac5c",
        "name": "v0.1.2",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "cd38ba61.7e9ce",
        "type": "debug",
        "z": "20e19740.7ac5c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1370,
        "y": 40,
        "wires": []
    },
    {
        "id": "ef12749.8263d08",
        "type": "inject",
        "z": "20e19740.7ac5c",
        "name": "reset ping",
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 410,
        "y": 380,
        "wires": [
            [
                "cfbf9c07.612f78"
            ]
        ]
    },
    {
        "id": "cfbf9c07.612f78",
        "type": "function",
        "z": "20e19740.7ac5c",
        "name": "Waterbird 🦩",
        "func": "var retries = global.get(\"waterbird_ping_retries\") || 0;\nvar interval = global.get(\"waterbird_ping_interval\") || null;\n\nif (retries === 0 || msg.payload === \"reset\") {\n  retries = 1;\n  clearInterval(interval);\n  node.status({\n    fill: \"blue\",\n    shape: \"dot\",\n    text: `RESET`,\n  });\n\n  interval = setInterval(() => {\n    var retries = global.get(\"waterbird_ping_retries\") || 0;\n    if (retries < 3) {\n      retries = retries + 1;\n    } else {\n      node.status({\n        fill: \"red\",\n        shape: \"dot\",\n        text: `OFFLINE`,\n      });\n    }\n    global.set(\"waterbird_ping_retries\", retries);\n    node.send({\n      topic: `waterbird/pingreq`,\n      payload: \"\",\n    });\n  }, 30000);\n} else if (msg.topic === \"waterbird/pingresp\" && msg.payload) {\n  retries = 1;\n  node.status({\n    fill: \"green\",\n    shape: \"dot\",\n    text: `Uptime: ${msToTime(msg.payload)}`,\n  });\n}\n\nfunction msToTime(s) {\n  function pad(n, z) {\n    z = z || 2;\n    return (\"00\" + n).slice(-z);\n  }\n\n  var ms = s % 1000;\n  s = (s - ms) / 1000;\n  var secs = s % 60;\n  s = (s - secs) / 60;\n  var mins = s % 60;\n  s = (s - mins) / 60;\n  var hrs = s % 24;\n  var days = (s - hrs) / 24;\n\n  return `${days}d, ${pad(hrs)}h, ${pad(mins)}m, ${pad(secs)}s.`;\n}\n\nglobal.set(\"waterbird_ping_retries\", retries);\nglobal.set(\"waterbird_ping_interval\", interval);\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "d1516414.e4007"
            ]
        ],
        "icon": "font-awesome/fa-heart"
    },
    {
        "id": "c9b80ac7.e29f18",
        "type": "mqtt in",
        "z": "20e19740.7ac5c",
        "name": "",
        "topic": "waterbird/pingresp",
        "qos": "0",
        "datatype": "auto",
        "broker": "59504833.dbd63",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "cfbf9c07.612f78"
            ]
        ]
    },
    {
        "id": "c589398c.c301e",
        "type": "pushover api",
        "z": "20e19740.7ac5c",
        "keys": "ea77fb0e.69f318",
        "title": "Waterbird 🦩",
        "name": "",
        "x": 1360,
        "y": 240,
        "wires": []
    },
    {
        "id": "59504833.dbd63",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": ""
    },
    {
        "id": "ea77fb0e.69f318",
        "type": "pushover-keys",
        "z": "",
        "name": "node-red"
    }
]